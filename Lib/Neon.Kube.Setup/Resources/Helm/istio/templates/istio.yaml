apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: {{ .Release.Namespace }}
  name: neon-ingress-istio
spec:
  namespace: {{ .Release.Namespace }}
  hub: {{ .Values.images.registry }}
  tag: {{ .Values.images.istio.tag }}
  meshConfig:
    rootNamespace: {{ .Release.Namespace }}
    enablePrometheusMerge: false
    defaultConfig:
      proxyMetadata:
        SECRET_TTL: 2160h
      tracing:
        sampling: 1.0
        openCensusAgent:
          address: grafana-agent-node.neon-monitor:4320
          context: ["W3C_TRACE_CONTEXT", "GRPC_BIN", "CLOUD_TRACE_CONTEXT", "B3"]
    defaultProviders:
      tracing:
        - opencensus
    extensionProviders:
      - name: access-log
        envoyFileAccessLog:
          path: '/dev/stdout'
          logFormat:
            labels:
              authority: "%REQ(:AUTHORITY)%"
              client_ip: "%REQ(X-FORWARDED-FOR)%"
              forwarded_host: "%REQ(X-FORWARDED-HOST)%"
              forwarded_proto: "%REQ(X-FORWARDED-PROTO)%"
              host: "%REQ(:Host)%"
              method: "%REQ(:METHOD)%"
              mode: "%PROTOCOL%"
              path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
              referer: "%REQ(:Referer)%"
              request_id: "%REQ(X-REQUEST-ID)%"
              requested_server_name: "%REQUESTED_SERVER_NAME%"
              response_code: "%RESPONSE_CODE%"
              trace_id: "%REQ(traceparent)%"
              user_agent: "%REQ(USER-AGENT)%"
      - name: opencensus
        opencensus:
          context:
            - W3C_TRACE_CONTEXT
            - GRPC_BIN
            - CLOUD_TRACE_CONTEXT
            - B3
          port: 4320
          service: grafana-agent-node.neon-monitor.svc.cluster.local
      - name: neon-sso-service
        envoyExtAuthzHttp:
          headersToDownstreamOnDeny:
            - content-type
            - set-cookie
          headersToUpstreamOnAllow:
            - authorization
            - path
            - x-auth-request-user
            - x-auth-request-email
            - x-auth-request-access-token
          includeHeadersInCheck:
            - authorization
            - cookie
          port: 4180
          service: neon-sso-oauth2-proxy.neon-system.svc.cluster.local
  components:
    pilot:
      k8s:
        env:
          - name: "GOGC"
            value: "25"
        priorityClassName: {{ .Values.priorityClassName }}
        tolerations:
          - operator: Exists
            effect: NoSchedule
          - operator: Exists
            effect: NoExecute
        resources:
          requests:
            cpu: "{{ .Values.resources.pilot.requests.cpu }}"
            memory: "{{ .Values.resources.pilot.requests.memory }}"
          limits:
            cpu: "{{ .Values.resources.pilot.limits.cpu }}"
            memory: "{{ .Values.resources.pilot.limits.memory }}"
        hpaSpec:
          maxReplicas: 1
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        env:
          - name: "GOGC"
            value: "25"
        priorityClassName: {{ .Values.priorityClassName }}
        tolerations:
          - operator: Exists
            effect: NoSchedule
          - operator: Exists
            effect: NoExecute
        overlays:
          - apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
            patches:
              - path: kind
                value: DaemonSet
              - path: spec.strategy
        hpaSpec:
          maxReplicas: 1
        service:
          {{- with .Values.nodePorts }}
            ports:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        resources:
          requests:
            cpu: "{{ .Values.resources.ingress.requests.cpu }}"
            memory: "{{ .Values.resources.ingress.requests.memory }}"
          limits:
            cpu: "{{ .Values.resources.ingress.limits.cpu }}"
            memory: "{{ .Values.resources.ingress.limits.memory }}"
    cni:
      k8s:
        tolerations:
          - operator: Exists
            effect: NoSchedule
          - operator: Exists
            effect: NoExecute
        env:
          - name: "GOGC"
            value: "25"
      enabled: true
      namespace: kube-system
  values:
    sidecarInjectorWebhook:
      enableNamespacesByDefault: false
    global:
      istioNamespace: {{ .Release.Namespace }}
      logging:
        level: "default:info"
      logAsJson: true
      imagePullPolicy: IfNotPresent
      jwtPolicy: third-party-jwt
      proxy:
        tracer: openCensusAgent
        holdApplicationUntilProxyStarts: true
        resources:
          requests:
            cpu: "{{ .Values.resources.proxy.requests.cpu }}"
            memory: "{{ .Values.resources.proxy.requests.memory }}"
      {{- if eq (include "defaultNodeSelectorEnabled" .) "true" }}
      defaultNodeSelector:
        {{- include "istio.defaultNodeSelector" . | nindent 8 }}
      {{- end }}
    gateways:
      istio-ingressgateway:
        type: NodePort
        externalTrafficPolicy: Local
    cni:
      excludeNamespaces:
       - {{.Release.Namespace}}
       - kube-node-lease
       - kube-public
      logLevel: info
