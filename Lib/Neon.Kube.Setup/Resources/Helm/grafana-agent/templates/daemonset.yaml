apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent-node
  namespace: neon-monitor
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: grafana-agent-node
  template:
    metadata:
      labels:
        name: grafana-agent-node
      annotations:
        sidecar.istio.io/inject: '{{ .Values.serviceMesh.enabled }}'
    spec:
      enableServiceLinks: false
      hostPID: {{ .Values.integrations.nodeExporter.enabled }}
      hostNetwork: {{ .Values.integrations.nodeExporter.enabled }}
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
      - name: agent
        args:
        - -config.file=/etc/agent/agent.yml
        - -config.expand-env=true
        - -metrics.wal-directory=/tmp/agent/data
        command:
        - /bin/agent
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo ${HOST_IP} ${HOSTNAME} >> /etc/hosts"]
        envFrom:
          - secretRef:
              name: grafana-agent-node
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: GOGC
          value: "10"
        image: "{{ .Values.agent.image.registry }}/{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 12345
          name: http-metrics
        - containerPort: 6831
          name: thrift-compact
          protocol: UDP
        - containerPort: 6832
          name: thrift-binary
          protocol: UDP
        - containerPort: 14268
          name: thrift-http
          protocol: TCP
        - containerPort: 14250
          name: thrift-grpc
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: http-otlp-http
        - containerPort: 4319
          name: otlp-grpc-lb
          protocol: TCP
        - containerPort: 4320
          name: tcp-opencensus
          protocol: TCP
        - containerPort: 5140
          name: syslog
          protocol: TCP
        securityContext:
          capabilities:
            add: ["SYS_TIME"]
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: grafana-agent-node
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /etc/machine-id
          name: etcmachineid
          readOnly: true
        - name: rootfs
          mountPath: /host/root
          readOnly: true
        - name: sysfs
          mountPath: /host/sys
          readOnly: true
        - name: procfs
          mountPath: /host/proc
          readOnly: true
        {{- if .Values.resources.agentNode }}
        resources:
        {{- toYaml .Values.resources.agentNode | nindent 10 }}
        {{- end }}
      serviceAccount: grafana-agent-node
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: grafana-agent-node
        name: grafana-agent-node
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /etc/machine-id
        name: etcmachineid
      - name: rootfs
        hostPath:
          path: /
      - name: sysfs
        hostPath:
          path: /sys
      - name: procfs
        hostPath:
          path: /proc
  updateStrategy:
    type: RollingUpdate