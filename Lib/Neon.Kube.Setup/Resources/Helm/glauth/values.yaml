# Default values for glauth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: registry.neon.local/neonkube
  repository: glauth-glauth
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.1.0-rc1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "neon-sso-glauth"

serviceMesh:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

debug: false

config:
  ldap:
    enabled: true
  ldaps:
    enabled: false
  backend:
    datastore: "plugin"
    plugin: "/app/postgres.so"
    pluginhandler: NewPostgresHandler
    database:
      host: neon-system-db-pooler.neon-system
      port: "5432"
      dbname: glauth
      user: neon_service
      password: password
    baseDN: "dc=cluster,dc=neoncluster,dc=io"
    nameformat: "cn"
    groupformat: "ou"
  api:
    enabled: false

users:
  sysadmin:
    password: ""
  user:
    password: ""
  serviceuser:
    password: ""

groups:
  - name: superadmin
    id: 5501
  - name: admin
    id: 5502

secrets:
  usersName: ""
  groupsName: ""
