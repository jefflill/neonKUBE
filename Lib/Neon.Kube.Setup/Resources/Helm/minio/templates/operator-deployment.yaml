apiVersion: apps/v1
kind: Deployment
metadata:
  name: "minio-operator"
  namespace: {{ .Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    {{- include "minio-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operator.replicaCount }}
  selector:
    matchLabels:
      {{- include "minio-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "minio-operator.selectorLabels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
    {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: minio-operator
    {{- with .Values.operator.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          secret:
            secretName: minio-client
            defaultMode: 420
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.operator.image.registry }}/{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          env:
            - name: ACCESS_KEY
              valueFrom:
                secretKeyRef: 
                  name: minio
                  key: accesskey
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef: 
                  name: minio
                  key: secretkey
          {{- if or .Values.operator.clusterDomain .Values.operator.nsToWatch }}
            {{- if .Values.operator.clusterDomain }}
            - name: CLUSTER_DOMAIN
              value: {{ .Values.operator.clusterDomain }}
            {{- end }}
            {{- if .Values.operator.nsToWatch }}
            - name: WATCHED_NAMESPACE
              value: {{ .Values.operator.nsToWatch }}
            {{- end }}
          {{ else }}
          {{- with .Values.operator.env }}
          env:
            {{ toYaml . | nindent 10 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /.mc-config
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp /.mc-config/config.json /.mc/config.json"]
    {{- with .Values.operator.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
    {{- end}}
