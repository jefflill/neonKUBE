
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    goharbor.io/deploy-mode: harbor
    goharbor.io/operator-version: v1.0.0
  labels:
    control-plane: harbor-operator
  name: harbor-operator
  namespace: neon-system
spec:
  selector:
    matchLabels:
      control-plane: harbor-operator
  template:
    metadata:
      annotations:
        goharbor.io/deploy-engine: Kustomization
        goharbor.io/deploy-mode: harbor
        goharbor.io/operator-version: v1.0.0
        sidecar.istio.io/inject: '{{ .Values.serviceMesh.enabled }}'
      labels:
        control-plane: harbor-operator
    spec:
      enableServiceLinks: false
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
      - args:
        - --enable-leader-election
        - --metrics-addr=127.0.0.1:8080
        command:
        - /manager
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIGURATION_FROM
          value: env,file:/etc/harbor-operator/config.yaml
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: ready
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 5000
          name: ready
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: ready
        resources:
          limits:
            memory: 300Mi
          requests:
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/harbor-operator/templates
          name: configuration-templates
          readOnly: true
        - mountPath: /etc/harbor-operator
          name: configuration
          readOnly: true
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: harbor-operator-config-template
        name: configuration-templates
      - configMap:
          name: harbor-operator-config
        name: configuration
