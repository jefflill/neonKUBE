apiVersion: goharbor.io/v1beta1
kind: HarborCluster
metadata:
  name: registry
  namespace: {{ .Release.Namespace | quote }}
spec:
  version: {{ .Values.harbor.version }}
  {{- if .Values.metrics.enabled }}
  exporter:
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- if .Values.components.chartMuseum.enabled }}
  chartmuseum:
    absoluteUrl: false
    image: {{ .Values.image.registry }}/harbor-chartmuseum-photon:v{{ .Values.harbor.version }}
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    resources: {}
  {{- end }}
  core:
    image: {{ .Values.image.registry }}/harbor-core:v{{ .Values.harbor.version }}
    resources: {}
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    tokenIssuer:
      kind: Issuer
      name: neon-system-selfsigned-issuer
  database:
    kind: PostgreSQL
    spec:
      postgresql:
        hosts:
          - host: neon-system-db.neon-system
            port: 5432
        passwordRef: registry
        prefix: harbor_
        sslMode: disable
        username: neon_service
  expose:
    core:
      ingress:
        host: {{ .Values.neonkube.clusterDomain.harborRegistry }}.{{ .Values.cluster.domain }}
      tls:
        certificateRef: neon-cluster-certificate
    notary:
      ingress:
        host: {{ .Values.neonkube.clusterDomain.harborNotary }}.{{ .Values.cluster.domain }}
      tls:
        certificateRef: neon-cluster-certificate
  externalURL: https://{{ .Values.neonkube.clusterDomain.harborRegistry }}.{{ .Values.cluster.domain }}
  harborAdminPasswordRef: registry
  storage:
    kind: "S3"
    spec:
      redirect:
        enable: false
      s3:
        accesskey: {{ .Values.storage.s3.accessKey }}
        bucket: harbor
        encrypt: false
        region: neon
        regionendpoint: http://minio-neon.neon-system
        secretkeyRef: {{ .Values.storage.s3.secretKeyRef }}
        secure: false
        skipverify: true
        storageclass: STANDARD
        v4auth: true
  imageSource:
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    repository: {{ .Values.image.registry }}
  internalTLS:
    enabled: false
  jobservice:
    image: {{ .Values.image.registry }}/harbor-jobservice:v{{ .Values.harbor.version }}
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    resources: {}
    workerCount: 10
  logLevel: info
  {{- if .Values.components.notary.enabled }}
  notary:
    migrationEnabled: true
    server:
      image: {{ .Values.image.registry }}/harbor-notary-server-photon:v{{ .Values.harbor.version }}
      {{- if eq (include "nodeSelectorEnabled" .) "true" }}
      nodeSelector:
        {{- include "chart.nodeSelector" . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
    signer:
      image: {{ .Values.image.registry }}/harbor-notary-signer-photon:v{{ .Values.harbor.version }}
      {{- if eq (include "nodeSelectorEnabled" .) "true" }}
      nodeSelector:
        {{- include "chart.nodeSelector" . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
  {{- end }}
  portal:
    resources: {}
  cache:
    kind: Redis
    spec:
      redis:
        host: neon-redis
        port: 26379
        sentinelMasterSet: master
  registry:
    image: {{ .Values.image.registry }}/harbor-registry-photon:v{{ .Values.harbor.version }}
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    relativeURLs: true
    certificateRefs:
      - registry-harbor-harbor-core-tokencert
    resources: {}
    metrics:
      enabled: {{ .Values.metrics.enabled }}
  {{- if .Values.components.trivy.enabled }}
  trivy:
    image: {{ .Values.image.registry }}/harbor-trivy-adapter-photon:v{{ .Values.harbor.version }}
    {{- if eq (include "nodeSelectorEnabled" .) "true" }}
    nodeSelector:
      {{- include "chart.nodeSelector" . | nindent 6 }}
    {{- end }}
    {{- if .Values.tolerations }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    resources: {}
    skipUpdate: false
    storage:
      cachePersistentVolume:
        claimName: registry-trivy-cache
  {{- end }}
  updateStrategyType: RollingUpdate
  trace: # Optional
    # Enable tracing or not
    enabled: true # Optional, default is false
    # Set `sampleRate` to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth.
    sampleRate: 1 # Optional, default is 1
    # A key value dict contains user defined attributes used to initialize trace provider.
    # The tracing provider: 'jaeger' or 'otel'
    provider: otel # Required
    # Spec for otel provider if provider is set to otel.
    otel: # Optional
      # The endpoint of otel
      endpoint: grafana-agent-node.neon-monitor.svc.cluster.local:4318 # Required
      # The URL path of otel
      urlPath: /v1/traces # Required
      # Whether enable compression or not for otel
      compression: false # Optional
      # Whether establish insecure connection or not for otel
      insecure: true # Optional
